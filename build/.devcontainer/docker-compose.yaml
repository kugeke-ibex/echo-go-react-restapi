version: '3.8'

services:
  db:
    image: postgres:17.1-alpine
    restart: always
    container_name: ${DB_CONTAINER_NAME}
    volumes:
      - type: volume
        source: golang_echo_db_store
        target: /var/lib/postgresql/data
        consistency: cached
      - type: bind
        source: "./db/init"
        target: "/docker-entrypoint-initdb.d"
        consistency: cached
    environment:
      TZ: ${TZ}
      LANG: ${LANG}
      LC_ALL: ${LC_ALL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PORT: ${DB_PORT}
    ports:
      - "${DB_PORT}:5432"

  golang_echo:
    container_name: golang_echo
    build:
      context: .
      dockerfile: ../golang/Dockerfile
    volumes:
      - type: bind
        source: "../../"
        target: "/go/src"
        consistency: cached
      - type: bind
        source: "./.env"
        target: "/go/src/.env"
        consistency: cached
      - type: volume
        source: golang_echo_home
        target: /home/devcontainer/go
        consistency: cached
    environment:
      POSTGRES_DSN: host=${DB_CONTAINER_NAME} user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} search_path=${POSTGRES_SCHEMA} port=5432 sslmode=disable TimeZone=Asia/Tokyo
    command:
      /bin/sh -c "while sleep 1000; do :; done"
      /bin/bash
    tty: true
    network_mode: service:db

volumes:
  golang_echo_home:
  golang_echo_db_store:
